#!/bin/bash
function install_pacman {
	pacman -Q "$1" >/dev/null
	if [ $? -ne 0 ]; then
		echo "Installing $1 with pacman..."
		sudo pacman -S "$1"
	fi
}

function install_link {
	source=$1
	target=$2

	if [ -h "$target" ]; then
		echo -n 'Removing old symlink... '
		rm "$target"
	else
		if [ -e "$target" ]; then
			echo "Not a symlink: $target."
			echo 'Aborting.'
			exit 1
		fi
	fi

	echo "Linking $source to $target..."
	ln -s "$source" "$target"
}

function die {
	echo "$*"
	exit 1
}

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
pushd $DIR >/dev/null
echo 'Updating git submodules...'
git submodule init
git submodule update
popd >/dev/null

if [ -x "`which pacman`" ]; then
	echo 'Checking pacman packages...'
	pacman -Q sudo >/dev/null || die 'Install sudo first.'
	install_pacman git
	install_pacman zsh
	install_pacman vim
	install_pacman wget
	install_pacman curl
	install_pacman openssh
	install_pacman make
	install_pacman gcc
	install_pacman automake
	install_pacman mpv
	install_pacman ttf-dejavu
	install_pacman rxvt-unicode
	#aur i3-gaps-next-git
	#aur ttf-ipa-mono
	#aur trackma-git
fi

if [ -d /usr/share/fonts ]; then
	fonts_dir="$HOME/.local/share/fonts"
	[ -d "$fonts_dir" ] || mkdir -p "$fonts_dir"
	for x in $DIR/misc/*.{ttf,otf}; do
		install_link "$x" "$fonts_dir/$(basename "$x")"
	done
fi

[ ! -d "$HOME/.vim" ] && mkdir "$HOME/.vim"
[ ! -d "$HOME/.vim/undo" ] && mkdir "$HOME/.vim/undo"
[ ! -d "$HOME/.vim/backup" ] && mkdir "$HOME/.vim/backup"
[ ! -d "$HOME/.vim/swap" ] && mkdir "$HOME/.vim/swap"
[ ! -d "$HOME/.vim/spell" ] && mkdir "$HOME/.vim/spell"

install_link "$DIR/ext/translator/tl"       "$DIR/bin/ext/tl"
install_link "$DIR/.vim/spell/pl.utf-8.add" "$HOME/.vim/spell/pl.utf-8.add"
install_link "$DIR/.vim/spell/en.utf-8.add" "$HOME/.vim/spell/en.utf-8.add"
install_link "$DIR/.vim/vundle"             "$HOME/.vim/vundle"
install_link "$DIR/.vimrc"                  "$HOME/.vimrc"
install_link "$DIR/.zshrc"                  "$HOME/.zshrc"
install_link "$DIR/.bashrc"                 "$HOME/.bashrc"
install_link "$DIR/.inputrc"                "$HOME/.inputrc"
install_link "$DIR/.minttyrc-light"         "$HOME/.minttyrc"
install_link "$DIR/.gitconfig"              "$HOME/.gitconfig"
install_link "$DIR/.gitignore"              "$HOME/.gitignore"
install_link "$DIR/.xinitrc"                "$HOME/.xinitrc"
install_link "$DIR/.config/Xresources"      "$HOME/.config/Xresources"
install_link "$DIR/.config/mpv"             "$HOME/.config/mpv"
install_link "$DIR/.config/i3"              "$HOME/.config/i3"
install_link "$DIR/.config/fontconfig"      "$HOME/.config/fontconfig"

shopt -s nocasematch
if [[ "$(uname)" =~ cygwin ]]; then
	cd "$HOME"
	echo "Hiding dotfiles in $HOME..."
	attrib +h +s .\*
fi

if [ -d /usr/share/fonts ]; then
	echo 'Generating font cache...'
	fc-cache -f
fi
