#!/bin/bash
echo 'Deprecated - this script is going to get removed in a few days.'
exit 1

function install_aur {
    url=https://aur.archlinux.org/packages/${1:0:2}/$1/$1.tar.gz
    has_installed pacman "$1" || return
    has_installed sudo "$1" || return
    has_installed wget "$1" || return
    has_installed tar "$1" || return
    if pacman -Q "$1" >/dev/null; then
        echo "$1 already installed"
    else
        pushd /tmp >/dev/null
        wget "$url" -qO- | tar xz || { echo "Package $1 not found!"; exit 1; }
        cd "$1"
        makepkg -i
        cd /tmp
        popd >/dev/null
    fi
}

function install_yaourt {
    has_installed yaourt "$1" || return
    if pacman -Q "$1" >/dev/null; then
        echo "$1 already installed"
    else
        yaourt -S "$1"
    fi
}

#basic stuff
    pushd $dir >/dev/null
    echo 'Updating git submodules...'
    git submodule init
    git submodule update
    popd >/dev/null
    if $linux; then
        install_pacman lsof
    fi

#cygwin
    if $cygwin; then
        if ! has_installed apt-cyg; then
            echo Installing apt-cyg...
            lynx -source rawgit.com/transcode-open/apt-cyg/master/apt-cyg > apt-cyg
            install apt-cyg /bin
        fi
    fi

#networking
    if $cygwin; then
        install_cygwin wget
        install_cygwin curl
        install_cygwin ssh
    elif $linux; then
        install_pacman wget #required for install_aur
        install_pacman curl
        install_pacman openssh
        install_aur package-query
        install_aur yaourt
    fi
    install_link "$dir/.ssh" "$HOME/.ssh"

#fonts
    if $linux_gfx; then
        install_pacman xorg-font-utils
        install_pacman ttf-dejavu
        install_pacman ttf-symbola
        install_yaourt ttf-font-awesome
        install_yaourt ttf-ipa-mona
        if [ -d /usr/share/fonts ]; then
            fonts_dir="$HOME/.local/share/fonts"
            [ -d "$fonts_dir" ] || mkdir -p "$fonts_dir"
            find "$dir/misc" -iregex '.*\.\(ttf\|otf\|pcf\|bdf\)' | while read -r x; do
                install_link "$x" "$fonts_dir/$(basename "$x")"
            done
            mkfontscale "$fonts_dir"
            mkfontdir "$fonts_dir"
            xset +fp "$fonts_dir"
            xset fp rehash
        fi
        if has_installed fc-list; then
            install_link "$dir/.config/fontconfig" "$HOME/.config/fontconfig"
            fc-cache
        fi
    fi

#python
    if $cygwin; then
        install_cygwin python
        install_cygwin python3
    elif $linux; then
        install_pacman python
        install_pacman python-pip
    fi

#vim
    if $cygwin; then
        install_cygwin vim
    elif $linux_gfx; then
        install_pacman gvim
    else
        install_pacman vim
    fi
    if has_installed vim; then
        create_folder "$HOME/.vim/undo"
        create_folder "$HOME/.vim/backup"
        create_folder "$HOME/.vim/swap"
        create_folder "$HOME/.vim/spell"
        install_link "$dir/.vim/spell/pl.utf-8.add" "$HOME/.vim/spell/pl.utf-8.add"
        install_link "$dir/.vim/spell/en.utf-8.add" "$HOME/.vim/spell/en.utf-8.add"
        install_link "$dir/.vim/vundle" "$HOME/.vim/vundle"
        install_link "$dir/.vimrc" "$HOME/.vimrc"
    fi

#zsh
    if $cygwin; then
        install_cygwin zsh
    elif $linux; then
        install_pacman zsh
    fi
    if has_installed zsh; then
        install_link "$dir/.zlogin" "$HOME/.zlogin"
        install_link "$dir/.zshrc" "$HOME/.zshrc"
    fi

#x
    if $linux_gfx; then
        install_yaourt escrotum-git   # to make screenshots
        install_pacman xorg-xsetroot  # to fix X cursor
        install_pacman xorg-xrandr    # to query monitor information
        install_pacman xdotool        # for all sort of things
        install_pacman autocutsel     # synchronize primary and selection clipboards
        install_pacman clipit         # keep clipboard content even after application closes
        install_yaourt compton        # for shadows, transparency and vsync
    fi
    if has_installed Xorg; then
        install_link "$dir/.xinitrc" "$HOME/.xinitrc"
    fi
    if has_installed compton; then
        install_link "$dir/.config/compton.conf" "$HOME/.config/compton.conf"
    fi

#fbterm
    if $linux_tty; then
        install_pacman fbterm
        install_pacman fbgrab
        install_pacman fbv
    fi

#development
    if $cygwin; then
        install_cygwin make
        install_cygwin gcc
        install_cygwin automake
    elif $linux; then
        install_pacman make
        install_pacman gcc
        install_pacman automake
    fi

    #visual studio
        if has_installed devenv; then
            install_link_or_cp "$dir/.vimrc" "$HOME/.vsvimrc"
        fi

#terminal emulators
    if $linux_gfx; then
        install_pacman rxvt-unicode
    fi
    if has_installed urxvt; then
        install_link "$dir/.config/Xresources" "$HOME/.config/Xresources"
        install_link "$dir/.config/Xresources-light" "$HOME/.config/Xresources-light"
        install_link "$dir/.config/Xresources-dark" "$HOME/.config/Xresources-dark"
    fi
    if has_installed mintty; then
        install_link "$dir/.inputrc" "$HOME/.inputrc"
        install_link "$dir/.minttyrc-light" "$HOME/.minttyrc"
    fi

#mpv
    if $linux_gfx; then
        install_pacman luajit #for LUA scripts when compiling manually
        install_yaourt mpv-git
    fi
    if has_installed mpv; then
        install_link "$dir/.config/mpv" "$HOME/.config/mpv"
    fi

#eyecandy
    if $linux_gfx; then
        install_pip eyecandy
    fi
    if has_installed eyecandy; then
        install_link "$dir/.config/EyeCandy" "$HOME/.config/EyeCandy"
    fi

#music player
    if $linux_gfx; then
        install_pacman mpd
        install_pacman mpc
    fi
    if has_installed mpd; then
        install_link "$dir/.config/mpd" "$HOME/.config/mpd"
        create_folder "$HOME/.config/mpd/playlists"
        touch "$HOME/.config/mpd/"{database,log,pid,state,sticker.sql}
    fi

#trackma
    if $linux_gfx; then
        install_yaourt trackma-git
    fi

#htop
    install_cygwin htop
    install_pacman htop
    if has_installed htop; then
        install_link "$dir/.config/htop" "$HOME/.config/htop"
    fi

#translator
    install_link "$dir/ext/translator/tl" "$dir/bin/ext/tl"

#background changer
    if $linux_gfx; then
        install_pip bk
    fi

#thunar
    if $linux_gfx; then
        install_pacman thunar
        install_pacman xfconf
        if [ -n "$DISPLAY" ]; then
            #enable full path in thunar window title for scripting
            xfconf-query --channel thunar --property /misc-full-path-in-title --create --type bool --set true
        fi
    fi

#windows
    if $cygwin; then
        echo "Hiding dotfiles in $HOME..."
        find "$HOME" -maxdepth 1 -iname '.*' | while read -r x; do
            attrib +h +s $(cygpath -w `dirname "$x"`)/`basename "$x"`
        done
    fi
